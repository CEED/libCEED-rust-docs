(function() {var implementors = {};
implementors["libceed"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"libceed/basis/struct.Basis.html\" title=\"struct libceed::basis::Basis\">Basis</a>&lt;'_&gt;&gt; for <a class=\"enum\" href=\"libceed/basis/enum.BasisOpt.html\" title=\"enum libceed::basis::BasisOpt\">BasisOpt</a>&lt;'a&gt;","synthetic":false,"types":["libceed::basis::BasisOpt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"libceed/elem_restriction/struct.ElemRestriction.html\" title=\"struct libceed::elem_restriction::ElemRestriction\">ElemRestriction</a>&lt;'_&gt;&gt; for <a class=\"enum\" href=\"libceed/elem_restriction/enum.ElemRestrictionOpt.html\" title=\"enum libceed::elem_restriction::ElemRestrictionOpt\">ElemRestrictionOpt</a>&lt;'a&gt;","synthetic":false,"types":["libceed::elem_restriction::ElemRestrictionOpt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"libceed/qfunction/struct.QFunction.html\" title=\"struct libceed::qfunction::QFunction\">QFunction</a>&lt;'_&gt;&gt; for <a class=\"enum\" href=\"libceed/qfunction/enum.QFunctionOpt.html\" title=\"enum libceed::qfunction::QFunctionOpt\">QFunctionOpt</a>&lt;'a&gt;","synthetic":false,"types":["libceed::qfunction::QFunctionOpt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"libceed/qfunction/struct.QFunctionByName.html\" title=\"struct libceed::qfunction::QFunctionByName\">QFunctionByName</a>&lt;'_&gt;&gt; for <a class=\"enum\" href=\"libceed/qfunction/enum.QFunctionOpt.html\" title=\"enum libceed::qfunction::QFunctionOpt\">QFunctionOpt</a>&lt;'a&gt;","synthetic":false,"types":["libceed::qfunction::QFunctionOpt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'a <a class=\"struct\" href=\"libceed/vector/struct.Vector.html\" title=\"struct libceed::vector::Vector\">Vector</a>&lt;'_&gt;&gt; for <a class=\"enum\" href=\"libceed/vector/enum.VectorOpt.html\" title=\"enum libceed::vector::VectorOpt\">VectorOpt</a>&lt;'a&gt;","synthetic":false,"types":["libceed::vector::VectorOpt"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'_ <a class=\"struct\" href=\"libceed/vector/struct.Vector.html\" title=\"struct libceed::vector::Vector\">Vector</a>&lt;'_&gt;&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.pointer.html\">*mut </a>CeedVector_private","synthetic":false,"types":["libceed::prelude::bind_ceed::CeedVector_private"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()