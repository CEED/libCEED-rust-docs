(function() {var implementors = {};
implementors["ex1_volume"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ex1_volume/opt/struct.Opt.html\" title=\"struct ex1_volume::opt::Opt\">Opt</a>","synthetic":true,"types":["ex1_volume::opt::Opt"]}];
implementors["ex2_surface"] = [{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"ex2_surface/opt/struct.Opt.html\" title=\"struct ex2_surface::opt::Opt\">Opt</a>","synthetic":true,"types":["ex2_surface::opt::Opt"]}];
implementors["libceed"] = [{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/basis/enum.BasisOpt.html\" title=\"enum libceed::basis::BasisOpt\">BasisOpt</a>&lt;'a&gt;","synthetic":true,"types":["libceed::basis::BasisOpt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/basis/struct.Basis.html\" title=\"struct libceed::basis::Basis\">Basis</a>&lt;'a&gt;","synthetic":true,"types":["libceed::basis::Basis"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/elem_restriction/enum.ElemRestrictionOpt.html\" title=\"enum libceed::elem_restriction::ElemRestrictionOpt\">ElemRestrictionOpt</a>&lt;'a&gt;","synthetic":true,"types":["libceed::elem_restriction::ElemRestrictionOpt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/elem_restriction/struct.ElemRestriction.html\" title=\"struct libceed::elem_restriction::ElemRestriction\">ElemRestriction</a>&lt;'a&gt;","synthetic":true,"types":["libceed::elem_restriction::ElemRestriction"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/operator/struct.Operator.html\" title=\"struct libceed::operator::Operator\">Operator</a>&lt;'a&gt;","synthetic":true,"types":["libceed::operator::Operator"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/operator/struct.CompositeOperator.html\" title=\"struct libceed::operator::CompositeOperator\">CompositeOperator</a>&lt;'a&gt;","synthetic":true,"types":["libceed::operator::CompositeOperator"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/qfunction/enum.QFunctionOpt.html\" title=\"enum libceed::qfunction::QFunctionOpt\">QFunctionOpt</a>&lt;'a&gt;","synthetic":true,"types":["libceed::qfunction::QFunctionOpt"]},{"text":"impl&lt;'a&gt; !<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/qfunction/struct.QFunction.html\" title=\"struct libceed::qfunction::QFunction\">QFunction</a>&lt;'a&gt;","synthetic":true,"types":["libceed::qfunction::QFunction"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/qfunction/struct.QFunctionByName.html\" title=\"struct libceed::qfunction::QFunctionByName\">QFunctionByName</a>&lt;'a&gt;","synthetic":true,"types":["libceed::qfunction::QFunctionByName"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/vector/enum.VectorOpt.html\" title=\"enum libceed::vector::VectorOpt\">VectorOpt</a>&lt;'a&gt;","synthetic":true,"types":["libceed::vector::VectorOpt"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/vector/struct.Vector.html\" title=\"struct libceed::vector::Vector\">Vector</a>&lt;'a&gt;","synthetic":true,"types":["libceed::vector::Vector"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/vector/struct.VectorView.html\" title=\"struct libceed::vector::VectorView\">VectorView</a>&lt;'a&gt;","synthetic":true,"types":["libceed::vector::VectorView"]},{"text":"impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/vector/struct.VectorViewMut.html\" title=\"struct libceed::vector::VectorViewMut\">VectorViewMut</a>&lt;'a&gt;","synthetic":true,"types":["libceed::vector::VectorViewMut"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/enum.MemType.html\" title=\"enum libceed::MemType\">MemType</a>","synthetic":true,"types":["libceed::MemType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/enum.NormType.html\" title=\"enum libceed::NormType\">NormType</a>","synthetic":true,"types":["libceed::NormType"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/enum.TransposeMode.html\" title=\"enum libceed::TransposeMode\">TransposeMode</a>","synthetic":true,"types":["libceed::TransposeMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/enum.QuadMode.html\" title=\"enum libceed::QuadMode\">QuadMode</a>","synthetic":true,"types":["libceed::QuadMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/enum.ElemTopology.html\" title=\"enum libceed::ElemTopology\">ElemTopology</a>","synthetic":true,"types":["libceed::ElemTopology"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/enum.EvalMode.html\" title=\"enum libceed::EvalMode\">EvalMode</a>","synthetic":true,"types":["libceed::EvalMode"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/struct.CeedError.html\" title=\"struct libceed::CeedError\">CeedError</a>","synthetic":true,"types":["libceed::CeedError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"enum\" href=\"libceed/enum.CeedErrorHandler.html\" title=\"enum libceed::CeedErrorHandler\">CeedErrorHandler</a>","synthetic":true,"types":["libceed::CeedErrorHandler"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/std/panic/trait.UnwindSafe.html\" title=\"trait std::panic::UnwindSafe\">UnwindSafe</a> for <a class=\"struct\" href=\"libceed/struct.Ceed.html\" title=\"struct libceed::Ceed\">Ceed</a>","synthetic":true,"types":["libceed::Ceed"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()