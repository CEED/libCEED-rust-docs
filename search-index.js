var searchIndex = JSON.parse('{\
"ex1_volume":{"doc":"","i":[[0,"opt","ex1_volume","",null,null],[3,"Opt","ex1_volume::opt","",null,null],[12,"ceed_spec","","libCEED backend resource to use",0,null],[12,"dim","","Mesh dimension",0,null],[12,"mesh_degree","","Polynomial degree for the mesh",0,null],[12,"solution_degree","","Polynomial degree for the solution",0,null],[12,"num_qpts","","Number of quadrature points in 1D",0,null],[12,"problem_size_requested","","Approximate problem size",0,null],[12,"test","","Test mode",0,null],[12,"quiet","","Quiet mode",0,null],[12,"gallery","","Gallery QFunctions",0,null],[0,"transform","ex1_volume","",null,null],[5,"transform_mesh_coordinates","ex1_volume::transform","",null,[[["usize",15],["vector",3]],["f64",15]]],[5,"main","ex1_volume","",null,[[],[["ceederror",3],["result",4]]]],[5,"example_1","","",null,[[["opt",3]],[["ceederror",3],["result",4]]]],[11,"from","ex1_volume::opt","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[],["bool",15]]]],"p":[[3,"Opt"]]},\
"ex2_surface":{"doc":"","i":[[0,"opt","ex2_surface","",null,null],[3,"Opt","ex2_surface::opt","",null,null],[12,"ceed_spec","","libCEED backend resource to use",0,null],[12,"dim","","Mesh dimension",0,null],[12,"mesh_degree","","Polynomial degree for the mesh",0,null],[12,"solution_degree","","Polynomial degree for the solution",0,null],[12,"num_qpts","","Number of quadrature points in 1D",0,null],[12,"problem_size_requested","","Approximate problem size",0,null],[12,"test","","Test mode",0,null],[12,"quiet","","Quiet mode",0,null],[12,"gallery","","Gallery QFunctions",0,null],[0,"transform","ex2_surface","",null,null],[5,"transform_mesh_coordinates","ex2_surface::transform","",null,[[["usize",15],["vector",3]],["f64",15]]],[5,"main","ex2_surface","",null,[[],[["ceederror",3],["result",4]]]],[5,"example_2","","",null,[[["opt",3]],[["ceederror",3],["result",4]]]],[11,"from","ex2_surface::opt","",0,[[]]],[11,"into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"clap","","",0,[[],["app",3]]],[11,"from_clap","","",0,[[["argmatches",3]]]],[11,"augment_clap","","",0,[[["app",3]],["app",3]]],[11,"is_subcommand","","",0,[[],["bool",15]]]],"p":[[3,"Opt"]]},\
"libceed":{"doc":"libCEED Rust InterfaceThis is the documentation for the …","i":[[0,"prelude","libceed","",null,null],[0,"basis","","A Ceed Basis defines the discrete finite element basis …",null,null],[4,"BasisOpt","libceed::basis","",null,null],[13,"Some","","",0,null],[13,"Collocated","","",0,null],[3,"Basis","","",null,null],[11,"create_tensor_H1","","",1,[[["usize",15],["ceed",3]],[["result",4],["ceederror",3]]]],[11,"create_tensor_H1_Lagrange","","",1,[[["usize",15],["ceed",3],["quadmode",4]],[["result",4],["ceederror",3]]]],[11,"create_H1","","",1,[[["usize",15],["ceed",3],["elemtopology",4]],[["result",4],["ceederror",3]]]],[11,"apply","","Apply basis evaluation from nodes to quadrature points or …",1,[[["usize",15],["evalmode",4],["vector",3],["transposemode",4],["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"dimension","","Returns the dimension for given CeedBasis",1,[[],["usize",15]]],[11,"num_components","","Returns number of components for given CeedBasis",1,[[],["usize",15]]],[11,"num_nodes","","Returns total number of nodes (in dim dimensions) of a …",1,[[],["usize",15]]],[11,"num_quadrature_points","","Returns total number of quadrature points (in dim …",1,[[],["usize",15]]],[0,"elem_restriction","libceed","A Ceed ElemRestriction decomposes elements and groups the …",null,null],[4,"ElemRestrictionOpt","libceed::elem_restriction","",null,null],[13,"Some","","",2,null],[13,"None","","",2,null],[3,"ElemRestriction","","",null,null],[11,"create","","",3,[[["usize",15],["memtype",4],["ceed",3]],[["result",4],["ceederror",3]]]],[11,"create_strided","","",3,[[["usize",15],["ceed",3]],[["result",4],["ceederror",3]]]],[11,"create_lvector","","Create an Lvector for an ElemRestriction",3,[[],[["result",4],["vector",3],["ceederror",3]]]],[11,"create_evector","","Create an Evector for an ElemRestriction",3,[[],[["result",4],["vector",3],["ceederror",3]]]],[11,"create_vectors","","Create Vectors for an ElemRestriction",3,[[],[["ceederror",3],["result",4]]]],[11,"apply","","Restrict an Lvector to an Evector or apply its transpose",3,[[["vector",3],["transposemode",4],["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"comp_stride","","Returns the Lvector component stride",3,[[],["usize",15]]],[11,"num_elements","","Returns the total number of elements in the range of a …",3,[[],["usize",15]]],[11,"elem_size","","Returns the size of elements in the ElemRestriction",3,[[],["usize",15]]],[11,"lvector_size","","Returns the size of the Lvector for an ElemRestriction",3,[[],["usize",15]]],[11,"num_components","","Returns the number of components in the elements of an …",3,[[],["usize",15]]],[11,"multiplicity","","Returns the multiplicity of nodes in an ElemRestriction",3,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[0,"operator","libceed","A Ceed Operator defines the finite/spectral element …",null,null],[3,"Operator","libceed::operator","",null,null],[3,"CompositeOperator","","",null,null],[11,"create","","",4,[[["ceed",3]],[["result",4],["ceederror",3]]]],[11,"apply","","Apply Operator to a vector",4,[[["vector",3],["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"apply_add","","Apply Operator to a vector and add result to output vector",4,[[["vector",3],["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"field","","Provide a field to a Operator for use by its QFunction",4,[[["str",15]],[["result",4],["ceederror",3]]]],[11,"linear_assemble_diagonal","","Assemble the diagonal of a square linear Operator",4,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"linear_assemble_add_diagonal","","Assemble the diagonal of a square linear Operator",4,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"linear_assemble_point_block_diagonal","","Assemble the point block diagonal of a square linear …",4,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"linear_assemble_add_point_block_diagonal","","Assemble the point block diagonal of a square linear …",4,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"create_multigrid_level","","Create a multigrid coarse Operator and level transfer …",4,[[["vector",3],["elemrestriction",3],["basis",3]],[["result",4],["ceederror",3]]]],[11,"create_multigrid_level_tensor_H1","","Create a multigrid coarse Operator and level transfer …",4,[[["vector",3],["elemrestriction",3],["vec",3],["basis",3]],[["result",4],["ceederror",3]]]],[11,"create_multigrid_level_H1","","Create a multigrid coarse Operator and level transfer …",4,[[["vector",3],["elemrestriction",3],["basis",3]],[["result",4],["ceederror",3]]]],[11,"create","","",5,[[["ceed",3]],[["result",4],["ceederror",3]]]],[11,"apply","","Apply Operator to a vector",5,[[["vector",3],["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"apply_add","","Apply Operator to a vector and add result to output vector",5,[[["vector",3],["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"sub_operator","","Add a sub-Operator to a Composite Operator",5,[[["operator",3]],[["result",4],["ceederror",3]]]],[11,"linear_asssemble_diagonal","","Assemble the diagonal of a square linear Operator",5,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"linear_assemble_add_diagonal","","Assemble the point block diagonal of a square linear …",5,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"linear_assemble_point_block_diagonal","","Assemble the diagonal of a square linear Operator",5,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[11,"linear_assemble_add_point_block_diagonal","","Assemble the diagonal of a square linear Operator",5,[[["vector",3]],[["i32",15],["ceederror",3],["result",4]]]],[0,"qfunction","libceed","A Ceed QFunction represents the spatial terms of the …",null,null],[6,"QFunctionInputs","libceed::qfunction","",null,null],[6,"QFunctionOutputs","","",null,null],[4,"QFunctionOpt","","",null,null],[13,"SomeQFunction","","",6,null],[13,"SomeQFunctionByName","","",6,null],[13,"None","","",6,null],[3,"QFunction","","",null,null],[3,"QFunctionByName","","",null,null],[6,"QFunctionUserClosure","","",null,null],[11,"create","","",7,[[["usize",15],["box",3],["ceed",3],["qfunctionuserclosure",6]],[["result",4],["ceederror",3]]]],[11,"apply","","Apply the action of a QFunction",7,[[["usize",15]],[["i32",15],["ceederror",3],["result",4]]]],[11,"input","","Add a QFunction input",7,[[["usize",15],["evalmode",4],["str",15]],[["result",4],["ceederror",3]]]],[11,"output","","Add a QFunction output",7,[[["usize",15],["evalmode",4],["str",15]],[["result",4],["ceederror",3]]]],[11,"create","","",8,[[["ceed",3],["str",15]],[["result",4],["ceederror",3]]]],[11,"apply","","Apply the action of a QFunction",8,[[["usize",15]],[["i32",15],["ceederror",3],["result",4]]]],[0,"vector","libceed","A Ceed Vector constitutes the main data structure and …",null,null],[4,"VectorOpt","libceed::vector","",null,null],[13,"Some","","",9,null],[13,"Active","","",9,null],[13,"None","","",9,null],[3,"Vector","","",null,null],[11,"create","","",10,[[["usize",15],["ceed",3]],[["result",4],["ceederror",3]]]],[11,"from_slice","","Create a Vector from a slice",10,[[["ceed",3]],[["result",4],["ceederror",3]]]],[11,"from_array","","Create a Vector from a mutable array reference",10,[[["ceed",3]],[["result",4],["ceederror",3]]]],[11,"length","","Returns the length of a CeedVector",10,[[],["usize",15]]],[11,"len","","Returns the length of a CeedVector",10,[[],["usize",15]]],[11,"set_value","","Set the CeedVector to a constant value",10,[[["f64",15]],[["i32",15],["ceederror",3],["result",4]]]],[11,"set_slice","","Set values from a slice of the same length",10,[[],[["i32",15],["ceederror",3],["result",4]]]],[11,"sync","","Sync the CeedVector to a specified memtype",10,[[["memtype",4]],[["i32",15],["ceederror",3],["result",4]]]],[11,"view","","Create an immutable view",10,[[],["vectorview",3]]],[11,"view_mut","","Create an mutable view",10,[[],["vectorviewmut",3]]],[11,"norm","","Return the norm of a CeedVector",10,[[["normtype",4]],[["f64",15],["ceederror",3],["result",4]]]],[3,"VectorView","","A (host) view of a Vector with Deref to slice.  We can\'t …",null,null],[3,"VectorViewMut","","A mutable (host) view of a Vector with Deref to slice.",null,null],[17,"MAX_QFUNCTION_FIELDS","libceed","",null,null],[17,"CEED_STRIDES_BACKEND","","",null,null],[4,"MemType","","Many Ceed interfaces take or return pointers to memory.  …",null,null],[13,"Host","","",11,null],[13,"Device","","",11,null],[4,"NormType","","Denotes type of vector norm to be computed",null,null],[13,"One","","",12,null],[13,"Two","","",12,null],[13,"Max","","",12,null],[4,"TransposeMode","","Denotes whether a linear transformation or its transpose …",null,null],[13,"NoTranspose","","",13,null],[13,"Transpose","","",13,null],[4,"QuadMode","","Type of quadrature; also used for location of nodes",null,null],[13,"Gauss","","",14,null],[13,"GaussLobatto","","",14,null],[4,"ElemTopology","","Type of basis shape to create non-tensor H1 element basis",null,null],[13,"Line","","",15,null],[13,"Triangle","","",15,null],[13,"Quad","","",15,null],[13,"Tet","","",15,null],[13,"Pyramid","","",15,null],[13,"Prism","","",15,null],[13,"Hex","","",15,null],[4,"EvalMode","","Basis evaluation mode",null,null],[13,"None","","",16,null],[13,"Interp","","",16,null],[13,"Grad","","",16,null],[13,"Div","","",16,null],[13,"Curl","","",16,null],[13,"Weight","","",16,null],[3,"CeedError","","",null,null],[12,"message","","",17,null],[4,"CeedErrorHandler","","",null,null],[13,"ErrorAbort","","",18,null],[13,"ErrorExit","","",18,null],[13,"ErrorReturn","","",18,null],[13,"ErrorStore","","",18,null],[3,"Ceed","","A Ceed is a library context representing control of a …",null,null],[11,"init","","Returns a Ceed context initialized with the specified …",19,[[["str",15]]]],[11,"init_with_error_handler","","Returns a Ceed context initialized with the specified …",19,[[["ceederrorhandler",4],["str",15]]]],[11,"resource","","Returns full resource name for a Ceed context",19,[[],["string",3]]],[11,"vector","","Returns a CeedVector of the specified length (does not …",19,[[["usize",15]],[["result",4],["vector",3],["ceederror",3]]]],[11,"vector_from_slice","","Create a Vector initialized with the data (copied) from a …",19,[[],[["result",4],["vector",3],["ceederror",3]]]],[11,"elem_restriction","","Returns a ElemRestriction",19,[[["usize",15],["memtype",4]],[["result",4],["elemrestriction",3],["ceederror",3]]]],[11,"strided_elem_restriction","","Returns a ElemRestriction",19,[[["usize",15]],[["result",4],["elemrestriction",3],["ceederror",3]]]],[11,"basis_tensor_H1","","Returns a tensor-product basis",19,[[["usize",15]],[["result",4],["ceederror",3],["basis",3]]]],[11,"basis_tensor_H1_Lagrange","","Returns a tensor-product Lagrange basis",19,[[["usize",15],["quadmode",4]],[["result",4],["ceederror",3],["basis",3]]]],[11,"basis_H1","","Returns a tensor-product basis",19,[[["elemtopology",4],["usize",15]],[["result",4],["ceederror",3],["basis",3]]]],[11,"q_function_interior","","Returns a CeedQFunction for evaluating interior …",19,[[["usize",15],["box",3],["qfunctionuserclosure",6]],[["qfunction",3],["ceederror",3],["result",4]]]],[11,"q_function_interior_by_name","","Returns a CeedQFunction for evaluating interior …",19,[[["str",15]],[["qfunctionbyname",3],["ceederror",3],["result",4]]]],[11,"operator","","Returns a Operator and associate a QFunction. A Basis and …",19,[[],[["operator",3],["ceederror",3],["result",4]]]],[11,"composite_operator","","Returns an Operator that composes the action of several …",19,[[],[["compositeoperator",3],["ceederror",3],["result",4]]]],[11,"from","libceed::basis","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_string","","",1,[[],["string",3]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","libceed::elem_restriction","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","libceed::operator","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"to_string","","",5,[[],["string",3]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","libceed::qfunction","",6,[[]]],[11,"into","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"to_string","","",7,[[],["string",3]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","libceed::vector","",9,[[]]],[11,"into","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"into","","",20,[[]]],[11,"to_string","","",20,[[],["string",3]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"into","","",21,[[]]],[11,"to_string","","",21,[[],["string",3]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","libceed","",11,[[]]],[11,"into","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"into","","",13,[[]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"into","","",14,[[]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"into","","",15,[[]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"into","","",16,[[]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"into","","",17,[[]]],[11,"to_string","","",17,[[],["string",3]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"into","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"into","","",19,[[]]],[11,"to_string","","",19,[[],["string",3]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"drop","libceed::basis","",1,[[]]],[11,"drop","libceed::elem_restriction","",3,[[]]],[11,"drop","libceed::qfunction","",7,[[]]],[11,"drop","libceed::vector","",10,[[]]],[11,"drop","","",20,[[]]],[11,"drop","","",21,[[]]],[11,"drop","libceed","",19,[[]]],[11,"from","libceed::basis","",0,[[["basis",3]]]],[11,"from","libceed::elem_restriction","",2,[[["elemrestriction",3]]]],[11,"from","libceed::qfunction","",6,[[["qfunction",3]]]],[11,"from","","",6,[[["qfunctionbyname",3]]]],[11,"from","libceed::vector","",9,[[["vector",3]]]],[11,"clone","libceed::basis","",0,[[],["basisopt",4]]],[11,"clone","libceed::elem_restriction","",2,[[],["elemrestrictionopt",4]]],[11,"clone","libceed::qfunction","",6,[[],["qfunctionopt",4]]],[11,"clone","libceed::vector","",9,[[],["vectoropt",4]]],[11,"clone","libceed","",11,[[],["memtype",4]]],[11,"clone","","",12,[[],["normtype",4]]],[11,"clone","","",13,[[],["transposemode",4]]],[11,"clone","","",14,[[],["quadmode",4]]],[11,"clone","","",15,[[],["elemtopology",4]]],[11,"clone","","",16,[[],["evalmode",4]]],[11,"eq","","",11,[[["memtype",4]],["bool",15]]],[11,"eq","","",12,[[["normtype",4]],["bool",15]]],[11,"eq","","",13,[[["transposemode",4]],["bool",15]]],[11,"eq","","",14,[[["quadmode",4]],["bool",15]]],[11,"eq","","",15,[[["elemtopology",4]],["bool",15]]],[11,"eq","","",16,[[["evalmode",4]],["bool",15]]],[11,"deref","libceed::vector","",20,[[]]],[11,"deref","","",21,[[]]],[11,"deref_mut","","",21,[[]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","libceed","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","libceed::basis","View a Basis",1,[[["formatter",3]],["result",6]]],[11,"fmt","libceed::elem_restriction","View an ElemRestriction",3,[[["formatter",3]],["result",6]]],[11,"fmt","libceed::operator","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","libceed::qfunction","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","libceed::vector","View a Vector",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","libceed","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","View a Ceed",19,[[["formatter",3]],["result",6]]]],"p":[[4,"BasisOpt"],[3,"Basis"],[4,"ElemRestrictionOpt"],[3,"ElemRestriction"],[3,"Operator"],[3,"CompositeOperator"],[4,"QFunctionOpt"],[3,"QFunction"],[3,"QFunctionByName"],[4,"VectorOpt"],[3,"Vector"],[4,"MemType"],[4,"NormType"],[4,"TransposeMode"],[4,"QuadMode"],[4,"ElemTopology"],[4,"EvalMode"],[3,"CeedError"],[4,"CeedErrorHandler"],[3,"Ceed"],[3,"VectorView"],[3,"VectorViewMut"]]},\
"mesh":{"doc":"","i":[[5,"cartesian_mesh_size","mesh","",null,[[["usize",15],["i64",15]]]],[5,"build_cartesian_restriction","","",null,[[["ceed",3],["usize",15]],[["result",4],["ceederror",3]]]],[5,"cartesian_mesh_coords","","",null,[[["ceed",3],["usize",15]],[["vector",3],["ceederror",3],["result",4]]]]],"p":[]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);