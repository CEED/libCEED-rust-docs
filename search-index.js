var searchIndex = JSON.parse('{\
"ex1_volume":{"doc":"","t":[0,3,12,12,12,12,12,12,12,12,12,0,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["opt","Opt","ceed_spec","dim","mesh_degree","solution_degree","num_qpts","problem_size_requested","test","quiet","gallery","transform","transform_mesh_coordinates","main","example_1","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","clap","from_clap","augment_clap","is_subcommand"],"q":["ex1_volume","ex1_volume::opt","","","","","","","","","","ex1_volume","ex1_volume::transform","ex1_volume","","ex1_volume::opt","","","","","","","","","","",""],"d":["","","libCEED backend resource to use","Mesh dimension","Polynomial degree for the mesh","Polynomial degree for the solution","Number of quadrature points in 1D","Approximate problem size","Test mode","Quiet mode","Gallery QFunctions","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["vector",3]],["f64",15]],[[],[["result",4],["ceederror",3]]],[[["opt",3]],[["result",4],["ceederror",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[],["app",3]],[[["argmatches",3]]],[[["app",3]],["app",3]],[[],["bool",15]]],"p":[[3,"Opt"]]},\
"ex2_surface":{"doc":"","t":[0,3,12,12,12,12,12,12,12,12,12,0,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11],"n":["opt","Opt","ceed_spec","dim","mesh_degree","solution_degree","num_qpts","problem_size_requested","test","quiet","gallery","transform","transform_mesh_coordinates","main","example_2","from","into","borrow","borrow_mut","try_from","try_into","type_id","fmt","clap","from_clap","augment_clap","is_subcommand"],"q":["ex2_surface","ex2_surface::opt","","","","","","","","","","ex2_surface","ex2_surface::transform","ex2_surface","","ex2_surface::opt","","","","","","","","","","",""],"d":["","","libCEED backend resource to use","Mesh dimension","Polynomial degree for the mesh","Polynomial degree for the solution","Number of quadrature points in 1D","Approximate problem size","Test mode","Quiet mode","Gallery QFunctions","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15],["vector",3]],["f64",15]],[[],[["result",4],["ceederror",3]]],[[["opt",3]],[["result",4],["ceederror",3]]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["formatter",3]],["result",6]],[[],["app",3]],[[["argmatches",3]]],[[["app",3]],["app",3]],[[],["bool",15]]],"p":[[3,"Opt"]]},\
"libceed":{"doc":"libCEED Rust Interface","t":[0,0,4,13,13,3,11,11,11,11,11,11,11,11,0,4,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,0,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,6,6,4,13,13,13,3,3,6,11,11,11,11,11,11,0,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,17,4,13,13,4,13,13,13,4,13,13,4,13,13,4,13,13,13,13,13,13,13,4,13,13,13,13,13,13,3,12,4,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["prelude","basis","BasisOpt","Some","Collocated","Basis","create_tensor_H1","create_tensor_H1_Lagrange","create_H1","apply","dimension","num_components","num_nodes","num_quadrature_points","elem_restriction","ElemRestrictionOpt","Some","None","ElemRestriction","create","create_strided","create_lvector","create_evector","create_vectors","apply","comp_stride","num_elements","elem_size","lvector_size","num_components","multiplicity","operator","Operator","CompositeOperator","create","apply","apply_add","field","linear_assemble_diagonal","linear_assemble_add_diagonal","linear_assemble_point_block_diagonal","linear_assemble_add_point_block_diagonal","create_multigrid_level","create_multigrid_level_tensor_H1","create_multigrid_level_H1","create","apply","apply_add","sub_operator","linear_asssemble_diagonal","linear_assemble_add_diagonal","linear_assemble_point_block_diagonal","linear_assemble_add_point_block_diagonal","qfunction","QFunctionInputs","QFunctionOutputs","QFunctionOpt","SomeQFunction","SomeQFunctionByName","None","QFunction","QFunctionByName","QFunctionUserClosure","create","apply","input","output","create","apply","vector","VectorOpt","Some","Active","None","Vector","create","from_slice","from_array","length","len","set_value","set_slice","sync","view","view_mut","norm","scale","axpy","pointwise_mult","pointwise_scale","pointwise_square","VectorView","VectorViewMut","MAX_QFUNCTION_FIELDS","CEED_STRIDES_BACKEND","MemType","Host","Device","NormType","One","Two","Max","TransposeMode","NoTranspose","Transpose","QuadMode","Gauss","GaussLobatto","ElemTopology","Line","Triangle","Quad","Tet","Pyramid","Prism","Hex","EvalMode","None","Interp","Grad","Div","Curl","Weight","CeedError","message","CeedErrorHandler","ErrorAbort","ErrorExit","ErrorReturn","ErrorStore","Ceed","init","init_with_error_handler","resource","vector","vector_from_slice","elem_restriction","strided_elem_restriction","basis_tensor_H1","basis_tensor_H1_Lagrange","basis_H1","q_function_interior","q_function_interior_by_name","operator","composite_operator","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_string","borrow","borrow_mut","try_from","try_into","type_id","drop","drop","drop","drop","drop","drop","drop","from","from","from","from","from","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","eq","eq","eq","eq","eq","eq","deref","deref","deref_mut","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt"],"q":["libceed","","libceed::basis","","","","","","","","","","","","libceed","libceed::elem_restriction","","","","","","","","","","","","","","","","libceed","libceed::operator","","","","","","","","","","","","","","","","","","","","","libceed","libceed::qfunction","","","","","","","","","","","","","","","libceed","libceed::vector","","","","","","","","","","","","","","","","","","","","","","","libceed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libceed::basis","","","","","","","","","","","","","","","","","libceed::elem_restriction","","","","","","","","","","","","","","","","","libceed::operator","","","","","","","","","","","","","","","","libceed::qfunction","","","","","","","","","","","","","","","","","","","","","","","","","libceed::vector","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libceed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","libceed::basis","libceed::elem_restriction","libceed::qfunction","libceed::vector","","","libceed","libceed::basis","libceed::elem_restriction","libceed::qfunction","","libceed::vector","libceed::basis","libceed::elem_restriction","libceed::qfunction","libceed::vector","libceed","","","","","","","","","","","","libceed::vector","","","","","","","libceed","","libceed::basis","libceed::elem_restriction","libceed::operator","","libceed::qfunction","","libceed::vector","","","libceed",""],"d":["","A Ceed Basis defines the discrete finite element basis …","","","","","","","","Apply basis evaluation from nodes to quadrature points or …","Returns the dimension for given CeedBasis","Returns number of components for given CeedBasis","Returns total number of nodes (in dim dimensions) of a …","Returns total number of quadrature points (in dim …","A Ceed ElemRestriction decomposes elements and groups the …","","","","","","","Create an Lvector for an ElemRestriction","Create an Evector for an ElemRestriction","Create Vectors for an ElemRestriction","Restrict an Lvector to an Evector or apply its transpose","Returns the Lvector component stride","Returns the total number of elements in the range of a …","Returns the size of elements in the ElemRestriction","Returns the size of the Lvector for an ElemRestriction","Returns the number of components in the elements of an …","Returns the multiplicity of nodes in an ElemRestriction","A Ceed Operator defines the finite/spectral element …","","","","Apply Operator to a vector","Apply Operator to a vector and add result to output vector","Provide a field to a Operator for use by its QFunction","Assemble the diagonal of a square linear Operator","Assemble the diagonal of a square linear Operator","Assemble the point block diagonal of a square linear …","Assemble the point block diagonal of a square linear …","Create a multigrid coarse Operator and level transfer …","Create a multigrid coarse Operator and level transfer …","Create a multigrid coarse Operator and level transfer …","","Apply Operator to a vector","Apply Operator to a vector and add result to output vector","Add a sub-Operator to a Composite Operator","Assemble the diagonal of a square linear Operator","Assemble the point block diagonal of a square linear …","Assemble the diagonal of a square linear Operator","Assemble the diagonal of a square linear Operator","A Ceed QFunction represents the spatial terms of the …","","","","","","","","","","","Apply the action of a QFunction","Add a QFunction input","Add a QFunction output","","Apply the action of a QFunction","A Ceed Vector constitutes the main data structure and …","","","","","","","Create a Vector from a slice","Create a Vector from a mutable array reference","Returns the length of a CeedVector","Returns the length of a CeedVector","Set the CeedVector to a constant value","Set values from a slice of the same length","Sync the CeedVector to a specified memtype","Create an immutable view","Create an mutable view","Return the norm of a CeedVector","Compute x = alpha x for a CeedVector","Compute y = alpha x + y for a pair of CeedVectors","Compute the pointwise multiplication w = x .* y for …","Compute the pointwise multiplication w = w .* x for …","Compute the pointwise multiplication w = w .* w for a …","A (host) view of a Vector with Deref to slice.  We can’…","A mutable (host) view of a Vector with Deref to slice.","","","Many Ceed interfaces take or return pointers to memory.  …","","","Denotes type of vector norm to be computed","","","","Denotes whether a linear transformation or its transpose …","","","Type of quadrature; also used for location of nodes","","","Type of basis shape to create non-tensor H1 element basis","","","","","","","","Basis evaluation mode","","","","","","","","","","","","","","A Ceed is a library context representing control of a …","Returns a Ceed context initialized with the specified …","Returns a Ceed context initialized with the specified …","Returns full resource name for a Ceed context","Returns a CeedVector of the specified length (does not …","Create a Vector initialized with the data (copied) from a …","Returns a ElemRestriction","Returns a ElemRestriction","Returns a tensor-product basis","Returns a tensor-product Lagrange basis","Returns a tensor-product basis","Returns a CeedQFunction for evaluating interior …","Returns a CeedQFunction for evaluating interior …","Returns a Operator and associate a QFunction. A Basis and …","Returns an Operator that composes the action of several …iew a Basis","View an ElemRestriction","","","","","View a Vector","","","","View a Ceed"],"i":[0,0,0,1,1,0,2,2,2,2,2,2,2,2,0,0,3,3,0,4,4,4,4,4,4,4,4,4,4,4,4,0,0,0,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,0,0,0,0,7,7,7,0,0,0,8,8,8,8,9,9,0,0,10,10,10,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,12,12,0,13,13,13,0,14,14,0,15,15,0,16,16,16,16,16,16,16,0,17,17,17,17,17,17,0,18,0,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,21,21,21,21,21,21,21,21,22,22,22,22,22,22,22,22,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,14,14,14,14,14,14,14,14,14,15,15,15,15,15,15,15,15,15,16,16,16,16,16,16,16,16,16,17,17,17,17,17,17,17,17,17,18,18,18,18,18,18,18,18,19,19,19,19,19,19,19,20,20,20,20,20,20,20,20,2,4,8,11,21,22,20,1,3,7,7,10,1,3,7,10,12,13,14,15,16,17,12,13,14,15,16,17,21,22,22,10,11,21,22,18,20,2,4,5,6,8,9,11,21,22,18,20],"f":[null,null,null,null,null,null,[[["usize",15],["ceed",3]],[["ceederror",3],["result",4]]],[[["usize",15],["ceed",3],["quadmode",4]],[["ceederror",3],["result",4]]],[[["usize",15],["ceed",3],["elemtopology",4]],[["ceederror",3],["result",4]]],[[["usize",15],["vector",3],["evalmode",4],["vector",3],["transposemode",4]],[["result",4],["ceederror",3],["i32",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],null,null,null,null,null,[[["usize",15],["memtype",4],["ceed",3]],[["ceederror",3],["result",4]]],[[["usize",15],["ceed",3]],[["ceederror",3],["result",4]]],[[],[["vector",3],["ceederror",3],["result",4]]],[[],[["vector",3],["ceederror",3],["result",4]]],[[],[["ceederror",3],["result",4]]],[[["vector",3],["vector",3],["transposemode",4]],[["result",4],["ceederror",3],["i32",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],null,null,null,[[["ceed",3]],[["ceederror",3],["result",4]]],[[["vector",3],["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3],["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["str",15]],[["ceederror",3],["result",4]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3],["elemrestriction",3],["basis",3]],[["ceederror",3],["result",4]]],[[["vec",3],["basis",3],["vector",3],["elemrestriction",3]],[["ceederror",3],["result",4]]],[[["vector",3],["elemrestriction",3],["basis",3]],[["ceederror",3],["result",4]]],[[["ceed",3]],[["ceederror",3],["result",4]]],[[["vector",3],["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3],["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["operator",3]],[["ceederror",3],["result",4]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],[[["vector",3]],[["result",4],["ceederror",3],["i32",15]]],null,null,null,null,null,null,null,null,null,null,[[["usize",15],["box",3],["ceed",3],["qfunctionuserclosure",6]],[["ceederror",3],["result",4]]],[[["usize",15]],[["result",4],["ceederror",3],["i32",15]]],[[["usize",15],["evalmode",4],["str",15]],[["ceederror",3],["result",4]]],[[["usize",15],["evalmode",4],["str",15]],[["ceederror",3],["result",4]]],[[["ceed",3],["str",15]],[["ceederror",3],["result",4]]],[[["usize",15]],[["result",4],["ceederror",3],["i32",15]]],null,null,null,null,null,null,[[["usize",15],["ceed",3]],[["ceederror",3],["result",4]]],[[["ceed",3]],[["ceederror",3],["result",4]]],[[["ceed",3]],[["ceederror",3],["result",4]]],[[],["usize",15]],[[],["usize",15]],[[["f64",15]],[["result",4],["ceederror",3],["i32",15]]],[[],[["result",4],["ceederror",3],["i32",15]]],[[["memtype",4]],[["result",4],["ceederror",3],["i32",15]]],[[],["vectorview",3]],[[],["vectorviewmut",3]],[[["normtype",4]],[["f64",15],["result",4],["ceederror",3]]],[[["f64",15]],[["ceederror",3],["result",4]]],[[["f64",15],["vector",3]],[["ceederror",3],["result",4]]],[[["vector",3]],[["ceederror",3],["result",4]]],[[["vector",3]],[["ceederror",3],["result",4]]],[[],[["ceederror",3],["result",4]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["str",15]]],[[["ceederrorhandler",4],["str",15]]],[[],["string",3]],[[["usize",15]],[["vector",3],["ceederror",3],["result",4]]],[[],[["vector",3],["ceederror",3],["result",4]]],[[["usize",15],["memtype",4]],[["elemrestriction",3],["ceederror",3],["result",4]]],[[["usize",15]],[["elemrestriction",3],["ceederror",3],["result",4]]],[[["usize",15]],[["basis",3],["ceederror",3],["result",4]]],[[["usize",15],["quadmode",4]],[["basis",3],["ceederror",3],["result",4]]],[[["usize",15],["elemtopology",4]],[["basis",3],["ceederror",3],["result",4]]],[[["usize",15],["box",3],["qfunctionuserclosure",6]],[["qfunction",3],["ceederror",3],["result",4]]],[[["str",15]],[["result",4],["ceederror",3],["qfunctionbyname",3]]],[[],[["result",4],["ceederror",3],["operator",3]]],[[],[["result",4],["ceederror",3],["compositeoperator",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["basis",3]]],[[["elemrestriction",3]]],[[["qfunction",3]]],[[["qfunctionbyname",3]]],[[["vector",3]]],[[],["basisopt",4]],[[],["elemrestrictionopt",4]],[[],["qfunctionopt",4]],[[],["vectoropt",4]],[[],["memtype",4]],[[],["normtype",4]],[[],["transposemode",4]],[[],["quadmode",4]],[[],["elemtopology",4]],[[],["evalmode",4]],[[["memtype",4]],["bool",15]],[[["normtype",4]],["bool",15]],[[["transposemode",4]],["bool",15]],[[["quadmode",4]],["bool",15]],[[["elemtopology",4]],["bool",15]],[[["evalmode",4]],["bool",15]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]]],"p":[[4,"BasisOpt"],[3,"Basis"],[4,"ElemRestrictionOpt"],[3,"ElemRestriction"],[3,"Operator"],[3,"CompositeOperator"],[4,"QFunctionOpt"],[3,"QFunction"],[3,"QFunctionByName"],[4,"VectorOpt"],[3,"Vector"],[4,"MemType"],[4,"NormType"],[4,"TransposeMode"],[4,"QuadMode"],[4,"ElemTopology"],[4,"EvalMode"],[3,"CeedError"],[4,"CeedErrorHandler"],[3,"Ceed"],[3,"VectorView"],[3,"VectorViewMut"]]},\
"mesh":{"doc":"","t":[5,5,5],"n":["cartesian_mesh_size","build_cartesian_restriction","cartesian_mesh_coords"],"q":["mesh","",""],"d":["","",""],"i":[0,0,0],"f":[[[["usize",15],["i64",15]]],[[["usize",15],["ceed",3]],[["result",4],["ceederror",3]]],[[["usize",15],["ceed",3]],[["vector",3],["ceederror",3],["result",4]]]],"p":[]}\
}');
initSearch(searchIndex);